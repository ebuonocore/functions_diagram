def get_city_coord(city:str)->tuple[float,float]|None
get_city_coord.position(688,463)
get_city_coord.dimension(216,39)

def get_distance_between_cities(city1:str,city2:str)->float|None
get_distance_between_cities.position(232,324)
get_distance_between_cities.dimension(398,58)

def create_cost_table(cities:list[str])->dict[str,dict[str,float|None]]
create_cost_table.position(140,-23)
create_cost_table.dimension(258,39)

def distance_route(cost:dict[str,dict[str,float]],route:list[str])->float
distance_route.position(2000,2000)
distance_route.dimension(216,96)

def intermediate_towns(cost:dict[str,dict[str,float]],town_origine:str)->list[str]
intermediate_towns.position(857,99)
intermediate_towns.dimension(272,96)

def permutations(stages:list[str])->list[tuple[str,...]]
permutations.position(615,604)
permutations.dimension(190,39)

def routes(town_origine:str,permutations_stages:list[tuple[str,...]])->list[list[str]]
routes.position(798,277)
routes.dimension(370,77)

def search_minimum(cost:dict[str,dict[str,float]],permutations_routes:list[list[str]])->tuple[float|None,list[str]]
search_minimum.position(3000,3000)
search_minimum.dimension(380,96)

def print_score(score:float|None,best_route:list[str])->None
print_score.position(320,3200)
print_score.dimension(230,58)

node(cities:list,(63,488))
node(origin:str,(80,421))
node(stages:list[str],(52,669))
node(permutations_routes:list[list[str]],(66,572))
node(score:float,(1387,584))
node(best_route:list[str],(1308,654))
